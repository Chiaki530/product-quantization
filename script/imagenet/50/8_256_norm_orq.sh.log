# load the base data ../data/imagenet/imagenet_base.fvecs, 
# load the queries ../data/imagenet/imagenet_query.fvecs, 
# load the ground truth ../data/imagenet/50_imagenet_product_groundtruth.ivecs
# ranking metric product
# NormPQ, percentiles: 256, quantize: ORQ, RQ : Subspace PQ, M: 1, Ks : 256, code_dtype: <class 'numpy.uint8'>Subspace PQ, M: 1, Ks : 256, code_dtype: <class 'numpy.uint8'>Subspace PQ, M: 1, Ks : 256, code_dtype: <class 'numpy.uint8'>Subspace PQ, M: 1, Ks : 256, code_dtype: <class 'numpy.uint8'>Subspace PQ, M: 1, Ks : 256, code_dtype: <class 'numpy.uint8'>Subspace PQ, M: 1, Ks : 256, code_dtype: <class 'numpy.uint8'>Subspace PQ, M: 1, Ks : 256, code_dtype: <class 'numpy.uint8'>,  M: 1, Ks : 256, code_dtype: <class 'numpy.uint8'>
#    Training the subspace: 0 / 1, 0 -> 150
# layer: 0,  residual average norm : 0.6845022439956665 max norm: 1.0284247398376465 min norm: 0.1118190586566925
#    Training the subspace: 0 / 1, 0 -> 150
# layer: 1,  residual average norm : 0.5999408960342407 max norm: 0.962308943271637 min norm: 0.0
#    Training the subspace: 0 / 1, 0 -> 150
# layer: 2,  residual average norm : 0.5484230518341064 max norm: 0.9137887954711914 min norm: 0.0
#    Training the subspace: 0 / 1, 0 -> 150
# layer: 3,  residual average norm : 0.5099238157272339 max norm: 0.8881378173828125 min norm: 0.0
#    Training the subspace: 0 / 1, 0 -> 150
# layer: 4,  residual average norm : 0.47904086112976074 max norm: 0.8539683818817139 min norm: 0.0
#    Training the subspace: 0 / 1, 0 -> 150
# layer: 5,  residual average norm : 0.4540175795555115 max norm: 0.8223704695701599 min norm: 0.0
#    Training the subspace: 0 / 1, 0 -> 150
# layer: 6,  residual average norm : 0.43100982904434204 max norm: 0.7859500050544739 min norm: 0.0
# compress items
# sorting items
# searching!
expected items, overall time, avg recall, avg precision, avg error, avg items
1, 0, 0.01486, 0.743, 0, 1
2, 0, 0.02886, 0.7215, 0, 2
4, 0, 0.0558, 0.6975, 0, 4
8, 0, 0.10442, 0.652625, 0, 8
16, 0, 0.18954000000000001, 0.5923125, 0, 16
32, 0, 0.3267, 0.51046875, 0, 32
64, 0, 0.51048, 0.3988125, 0, 64
128, 0, 0.7033799999999999, 0.2747578125, 0, 128
256, 0, 0.84956, 0.1659296875, 0, 256
512, 0, 0.9373999999999999, 0.09154296875, 0, 512
1024, 0, 0.97804, 0.047755859375, 0, 1024
2048, 0, 0.9929399999999999, 0.02424169921875, 0, 2048
4096, 0, 0.99702, 0.012170654296875, 0, 4096
8192, 0, 0.99882, 0.0060963134765625, 0, 8192
16384, 0, 0.99954, 0.00305035400390625, 0, 16384
32768, 0, 0.9997400000000001, 0.001525482177734375, 0, 32768
65536, 0, 0.9998600000000001, 0.0007628326416015625, 0, 65536
131072, 0, 0.99994, 0.00038144683837890625, 0, 131072
262144, 0, 0.9999800000000001, 0.00019073104858398438, 0, 262144
524288, 0, 0.9999800000000001, 9.536552429199219e-05, 0, 524288
1048576, 0, 0.9999800000000001, 4.7682762145996096e-05, 0, 1048576
2097152, 0, 1.0, 2.384185791015625e-05, 0, 2097152
4194304, 0, 1.0, 2.1364115890928497e-05, 0, 2340373
