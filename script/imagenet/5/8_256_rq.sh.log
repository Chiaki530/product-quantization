# load the base data ../data/imagenet/imagenet_base.fvecs, 
# load the queries ../data/imagenet/imagenet_query.fvecs, 
# load the ground truth ../data/imagenet/5_imagenet_product_groundtruth.ivecs
# ranking metric product
# Subspace PQ, M: 1, Ks : 256, code_dtype: <class 'numpy.uint8'>Subspace PQ, M: 1, Ks : 256, code_dtype: <class 'numpy.uint8'>Subspace PQ, M: 1, Ks : 256, code_dtype: <class 'numpy.uint8'>Subspace PQ, M: 1, Ks : 256, code_dtype: <class 'numpy.uint8'>Subspace PQ, M: 1, Ks : 256, code_dtype: <class 'numpy.uint8'>Subspace PQ, M: 1, Ks : 256, code_dtype: <class 'numpy.uint8'>Subspace PQ, M: 1, Ks : 256, code_dtype: <class 'numpy.uint8'>Subspace PQ, M: 1, Ks : 256, code_dtype: <class 'numpy.uint8'>
#    Training the subspace: 0 / 1, 0 -> 150
# layer: 0,  residual average norm : 0.20509201288223267 max norm: 0.8650335669517517 min norm: 0.028300635516643524
#    Training the subspace: 0 / 1, 0 -> 150
# layer: 1,  residual average norm : 0.1793849766254425 max norm: 0.7998328804969788 min norm: 0.0
#    Training the subspace: 0 / 1, 0 -> 150
# layer: 2,  residual average norm : 0.16378386318683624 max norm: 0.6254310607910156 min norm: 0.0
#    Training the subspace: 0 / 1, 0 -> 150
# layer: 3,  residual average norm : 0.15231886506080627 max norm: 0.5719641447067261 min norm: 0.0
#    Training the subspace: 0 / 1, 0 -> 150
# layer: 4,  residual average norm : 0.14314916729927063 max norm: 0.544162392616272 min norm: 0.0
#    Training the subspace: 0 / 1, 0 -> 150
# layer: 5,  residual average norm : 0.13543079793453217 max norm: 0.48670512437820435 min norm: 0.0
#    Training the subspace: 0 / 1, 0 -> 150
# layer: 6,  residual average norm : 0.12880443036556244 max norm: 0.4589427709579468 min norm: 0.0
#    Training the subspace: 0 / 1, 0 -> 150
# layer: 7,  residual average norm : 0.122958704829216 max norm: 0.4509408175945282 min norm: 0.0
# compress items
# sorting items
# searching!
expected items, overall time, avg recall, avg precision, avg error, avg items
1, 0, 0.0768, 0.38399999999999995, 0, 1
2, 0, 0.129, 0.3225, 0, 2
4, 0, 0.22019999999999998, 0.27525, 0, 4
8, 0, 0.34279999999999994, 0.21424999999999997, 0, 8
16, 0, 0.4796, 0.149875, 0, 16
32, 0, 0.6187999999999999, 0.09668749999999998, 0, 32
64, 0, 0.7474, 0.058390624999999995, 0, 64
128, 0, 0.8414, 0.0328671875, 0, 128
256, 0, 0.9134000000000001, 0.01783984375, 0, 256
512, 0, 0.9515999999999999, 0.009292968749999998, 0, 512
1024, 0, 0.974, 0.004755859375, 0, 1024
2048, 0, 0.9856, 0.00240625, 0, 2048
4096, 0, 0.9924, 0.00121142578125, 0, 4096
8192, 0, 0.9967999999999999, 0.0006083984375, 0, 8192
16384, 0, 0.9982, 0.00030462646484375, 0, 16384
32768, 0, 0.9987999999999999, 0.00015240478515625, 0, 32768
65536, 0, 0.9996, 7.6263427734375e-05, 0, 65536
131072, 0, 0.9997999999999999, 3.813934326171875e-05, 0, 131072
262144, 0, 0.9997999999999999, 1.9069671630859374e-05, 0, 262144
524288, 0, 0.9997999999999999, 9.534835815429687e-06, 0, 524288
1048576, 0, 0.9997999999999999, 4.7674179077148434e-06, 0, 1048576
2097152, 0, 0.9997999999999999, 2.3837089538574217e-06, 0, 2097152
4194304, 0, 0.9997999999999999, 1.1918544769287109e-06, 0, 4194304
